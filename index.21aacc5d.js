class t{constructor(t="",e=[]){this.name=t,this.tracks=e}filter(e,r){let n=new t;return n.name=this.name,n.tracks=this.tracks.filter(((t,r)=>r>=e)).filter((t=>!r||t.playedPublic)),n}}function e(t,e){t.split("\n").forEach(((t,r)=>{(t=t.trim()).length&&e(t,r)}))}function r(t,e){for(;t&&e[0];){const r=e.shift(),n=0===e.length,s=t.querySelectorAll(r);if(n)return s;t=s[0]}}class n{static format="Traktor";static extensions=[".nml"];constructor(t){if(this.xmlDoc=n.parseXML(t),this.xmlDoc){0===this.xmlDoc.getElementsByTagName("NML").length&&(this.xmlDoc=null)}}static parseXML(t){const e=(new DOMParser).parseFromString(t,"text/xml");return 0!==e.getElementsByTagName("parsererror").length?null:e}supports(){return null!==this.xmlDoc}parse(){return this.xmlDoc?function(t){const e={collection:s(t),playlists:[],format:"Traktor NML"};return e.playlists=function(t,e){const n=r(t,["NML","PLAYLISTS","NODE[TYPE='PLAYLIST']"])??[];return Array.prototype.map.call(n,(t=>{const n=new a(t.attributes.getNamedItem("NAME")?.value,[]),s=r(t,["PLAYLIST","ENTRY"])??[];return n.tracks=Array.prototype.map.call(s,((t,r)=>{const n=t.getElementsByTagName("PRIMARYKEY")[0]?.attributes.getNamedItem("KEY")?.value??"",s={key:n,collectionEntry:e[n],playedPublic:!0},a=t.getElementsByTagName("EXTENDEDDATA")[0];if(a){s.playedPublic=!!parseInt(a.attributes.getNamedItem("PLAYEDPUBLIC")?.value??"1");const t=parseInt(a.attributes.getNamedItem("STARTTIME")?.value??"0");s.startTime=p(t);const e=parseInt(a.attributes.getNamedItem("STARTDATE")?.value??"0");s.startDate={year:i(c=e),month:o(c),day:l(c)},s.startTimeJS=new Date(s.startDate.year,s.startDate.month,s.startDate.day,s.startTime.hours,s.startTime.minutes,s.startTime.seconds)}var c;return s})),n}))}(t,e.collection),e}(this.xmlDoc):null}}function s(t){const e=r(t,["NML","COLLECTION","ENTRY"])??[];return Array.prototype.map.call(e,((t,e)=>{const r=t.getElementsByTagName("LOCATION")[0],n=`${r.attributes.getNamedItem("VOLUME")?.value}${r.attributes.getNamedItem("DIR")?.value}${r.attributes.getNamedItem("FILE")?.value}`;return{title:t.attributes.getNamedItem("TITLE")?.value,artist:t.attributes.getNamedItem("ARTIST")?.value,key:n}})).reduce(((t,e)=>(t[e.key]=e,t)),{})}class a extends t{filter(t,e){const r=super.filter(t,e);return function(t){const e=t.tracks[0],r=t.tracks[t.tracks.length-1];if(e&&r&&e?.startTimeJS&&r?.startTimeJS){const n=e.startTimeJS.getTime(),s=p((r.startTimeJS.getTime()-n)/1e3).hours>0;t.tracks.forEach((t=>{t.startTimeJS&&(t.timeOffset=(t.startTimeJS.getTime()-n)/1e3,t.timeOffsetString=function(t,e){const r=m(t).toString().padStart(2,"0"),n=u(t).toString().padStart(2,"0"),s=c(t).toString().padStart(2,"0");return e?`${n}:${s}`:`${r}:${n}:${s}`}(t.timeOffset,!s))}))}}(r),r}}function i(t){return t>>16}function o(t){return(t>>8)%256}function l(t){return t%256}function c(t){return t%60}function u(t){return Math.floor((t-3600*Math.floor(t/3600))/60)}function m(t){return Math.floor(t/3600)}function p(t){return{hours:m(t),minutes:u(t),seconds:c(t)}}class h{static format="RekordBox";static extensions=[".xml"];constructor(t){if(this.xmlDoc=h.parseXML(t),this.xmlDoc){0===this.xmlDoc.getElementsByTagName("DJ_PLAYLISTS").length&&(this.xmlDoc=null)}}static parseXML(t){const e=(new DOMParser).parseFromString(t,"text/xml");return 0!==e.getElementsByTagName("parsererror").length?null:e}supports(){return null!==this.xmlDoc}parse(){return this.xmlDoc?function(e){if(!e.getElementsByTagName("DJ_PLAYLISTS").length)return null;const r={collection:T(e),playlists:[],format:"RekordBox"};return r.playlists=function(e,r){const n=e.querySelectorAll("NODE[Type='1']");return Array.prototype.map.call(n,(e=>{const n=e.attributes.getNamedItem("Name")?.value||"",s=new t(n,[]);return s.tracks=Array.prototype.map.call(e.getElementsByTagName("TRACK"),((t,e)=>{const n=t.attributes.getNamedItem("Key")?.value??"";return{key:n,playedPublic:!0,collectionEntry:r[n]}})),s}))}(e,r.collection),r}(this.xmlDoc):null}}function T(t){const e=r(t,["DJ_PLAYLISTS","COLLECTION","TRACK"]);return Array.prototype.map.call(e,((t,e)=>({key:t.attributes.getNamedItem("TrackID")?.value,title:t.attributes.getNamedItem("Name")?.value,artist:t.attributes.getNamedItem("Artist")?.value}))).reduce(((t,e)=>(t[e.key]=e,t)),{})}class d{constructor(t){this.data=t}get name(){const t=/(\w+)(\s|$)/g.exec(this.data);return t?.[1]?t[1].toUpperCase():""}stringParam(){let t=/^\s*(\w+)\s"(.*)"/.exec(this.data);return t?.[2]?t[2]:(t=/^\s*\w+\s(.*)$/.exec(this.data),t?.[1]?t[1]:void 0)}param(t){return this.data.split(" ")[t]}}class y{onCommand(t,e){switch(e.name){case"TITLE":this.title=e.stringParam();break;case"PERFORMER":this.performer=e.stringParam()}}onNextState(t,e){return"FILE"===e.name?new f:this}}class f{onCommand(e,r){const n=[e.header.title,e.header.performer].filter((t=>t)),s=new t(n.join(" - "));e.archive.playlists.push(s)}onNextState(t,e){return"TRACK"===e.name?new g(t,e.param(1)):this}}class g{constructor(t,e){this.id=e??""+Math.random();const r={key:this.id,title:"",artist:""},n=t.archive.playlists[t.archive.playlists.length-1],s={key:r.key,collectionEntry:r,playedPublic:!0};n?.tracks.push(s),t.archive.collection[r.key]=r}playlist(t){return t.archive.playlists[t.archive.playlists.length-1]}playlistTrack(t){const e=this.playlist(t);return e.tracks[e.tracks.length-1]}collectionTrack(t){const e=this.playlistTrack(t);return t.archive.collection[e.key]}onCommand(t,e){const r=this.collectionTrack(t);switch(e.name){case"TITLE":r.title=e.stringParam()??"";break;case"PERFORMER":r.artist=e.stringParam()??""}}onNextState(t,e){return"TRACK"===e.name?new g(t,e.param(1)):this}}const E="TRACK TITLE",k="ARTIST",I="#";function x(t,e,r){const n=e[t];return void 0!==n&&r[n]?r[n]:null}const D={INDEX:(t,e,r)=>r.replace("${INDEX}",`${e+1}`),INDEX_PADDED:(t,e,r)=>{const n=t.tracks.length.toString().length;return r.replace("${INDEX_PADDED}",(e+1).toString().padStart(n,"0"))},TITLE:(t,e,r)=>r.replace("${TITLE}",t.tracks?.[e]?.collectionEntry.title||"Unknown Title"),ARTIST:(t,e,r)=>r.replace("${ARTIST}",t.tracks?.[e]?.collectionEntry.artist||"Unknown Artist"),OFFSET:(t,e,r)=>{const n=t.tracks[e]?.timeOffsetString??"";return r.replace("${OFFSET}",n)}};function L(t,e){const r=[];return r.push(t.name),t.tracks.map(((n,s)=>{return r.push((a=t,i=s,o=e,Object.values(D).forEach((t=>{o=t(a,i,o)})),o));var a,i,o})),r.join("\n")}function N(t){return document.getElementById(t)}const S=[n,h,class{static format="RekordBox M3U8";static extensions=[".m3u8"];constructor(t){this.contents=t}supports(){return this.contents.startsWith("#EXTM3U")}parse(){return function(r){if(!r.startsWith("#EXTM3U"))return null;const n={collection:{},playlists:[],format:"M3U"},s=new t("Untitled Playlist");let a,i;return n.playlists.push(s),e(r,(t=>{const e=/^#EXTINF:(\d+),(([^-]*$)|(.*)( - )(.*))/g.exec(t);if(e&&e[1])a={key:"__TEMP__",title:e[6]||e[3]||"",artist:e[4]||""},i={key:a.key,playedPublic:!0,collectionEntry:a};else if(i&&a){const e=t;a.key=e,i.key=e,n.collection[e]=a,s.tracks.push(i)}})),n}(this.contents)}},class{static format="RekordBox CUE";static extensions=[".cue"];constructor(t){this.contents=t}supports(){return this.contents.startsWith("REM DATE ")}parse(){return function(t){let r=new y;const n={archive:{collection:{},playlists:[],format:"CUE"},header:r};return function(t,r){e(t,((t,e)=>{const n=new d(t);r(n)}))}(t,(t=>{r.onCommand(n,t),r=r=r.onNextState(n,t)})),n.archive}(this.contents)}},class{static format="RekordBox TXT";static extensions=[".txt"];constructor(t){this.contents=t}supports(){return this.contents.trim().startsWith("#\t")}parse(){const r={collection:{},playlists:[],format:"CUE"},n=new t;return function(t,r){let n={};e(t,((t,e)=>{const s=t.split("\t");0===e?n=s.reduce(((t,e,r)=>(t[e.toUpperCase()]=r,t)),n):r({key:x(I,n,s)??`${Math.random()}`,title:x(E,n,s)??"",artist:x(k,n,s)??""})}))}(this.contents,(t=>{const e={key:t.key,collectionEntry:t,playedPublic:!0};r.collection[t.key]=t,n.tracks.length||r.playlists.push(n),n.tracks.push(e)})),r}}];function v(t){N("errorResults").setAttribute("class","hidden"),N("playlistResults").setAttribute("class","hidden");const e=function(t){for(let e of S){const r=new e(t);if(r.supports())return r.parse()}return null}(t);if(!e){!function(t){N("errorResults").setAttribute("class","");N("errorMessage").innerText=t}("Sorry, we could not parse that file.");return void(N("trackList").innerText="No playlists found.")}const r=N("playlistsDropDown");r.replaceChildren(""),e.playlists.forEach(((t,e)=>{const n=document.createElement("option");t.name.trim().length?n.innerText=t.name:n.innerText=`Playlist ${e+1}`,n.playlist=t,r.appendChild(n)})),N("playlistResults").setAttribute("class",""),A()}function A(){const t=N("playlistsDropDown").selectedOptions[0];let e=parseInt(N("startTrackIndex").value)||1;e=Math.max(1,e-1);const r=N("publicTracks"),n=t.playlist.filter(e,r.checked);N("trackList").textContent=L(n,function(){let t=N("formatString").value;return 0===t.length&&(t="${INDEX}. ${TITLE} - ${ARTIST}"),t}())}function R(t){XMLHttpRequestEventTarget;const e=t.target,r=e?.files?.[0];if(!r)return;const n=new FileReader;n.readAsText(r),n.onload=function(){v(n?.result?.toString()??"")},e.value=""}function b(){const t=N("trackList").innerText;navigator.clipboard.writeText(t)}window.addEventListener("DOMContentLoaded",(()=>{N("archiveFile").addEventListener("change",R,!1),N("formatString").addEventListener("input",A,!1),N("startTrackIndex").addEventListener("input",A,!1),N("publicTracks").addEventListener("input",A,!1),N("copyToClipboard").addEventListener("click",b,!1),N("playlistsDropDown").addEventListener("change",A,!1);const t=Object.keys(D).map((t=>`\${${t}}`)).join(" "),e=N("fieldList");e.textContent=e.textContent+t;const r=S.map((t=>t.extensions)).flat();N("archiveFile").accept=r.join(",")}));
//# sourceMappingURL=index.21aacc5d.js.map
