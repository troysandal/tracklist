class t{constructor(t="",e=[]){this.name=t,this.tracks=e}filter(e,n){let r=new t;return r.name=this.name,r.tracks=this.tracks.filter(((t,n)=>n>=e)).filter((t=>!n||t.playedPublic)),r}}function e(t,e){t.split("\n").forEach(((t,n)=>{(t=t.trim()).length&&e(t,n)}))}function n(t,e){for(;t&&e[0];){const n=e.shift(),r=0===e.length,s=t.querySelectorAll(n);if(r)return s;t=s[0]}}class r{static format="Traktor";static extensions=[".nml"];constructor(t){if(this.xmlDoc=r.parseXML(t),this.xmlDoc){0===this.xmlDoc.getElementsByTagName("NML").length&&(this.xmlDoc=null)}}static parseXML(t){const e=(new DOMParser).parseFromString(t,"text/xml");return 0!==e.getElementsByTagName("parsererror").length?null:e}supports(){return null!==this.xmlDoc}parse(){return this.xmlDoc?function(t){const e={collection:s(t),playlists:[],format:"Traktor NML"};return e.playlists=function(t,e){const r=n(t,["NML","PLAYLISTS","NODE[TYPE='PLAYLIST']"])??[];return Array.prototype.map.call(r,(t=>{const r=new a(t.attributes.getNamedItem("NAME")?.value,[]),s=n(t,["PLAYLIST","ENTRY"])??[];return r.tracks=Array.prototype.map.call(s,((t,n)=>{const r=t.getElementsByTagName("PRIMARYKEY")[0]?.attributes.getNamedItem("KEY")?.value??"",s={key:r,collectionEntry:e[r],playedPublic:!0},a=t.getElementsByTagName("EXTENDEDDATA")[0];if(a){s.playedPublic=!!parseInt(a.attributes.getNamedItem("PLAYEDPUBLIC")?.value??"1");const t=parseInt(a.attributes.getNamedItem("STARTTIME")?.value??"0");s.startTime={hours:m(h=t),minutes:u(h),seconds:l(h)};const e=parseInt(a.attributes.getNamedItem("STARTDATE")?.value??"0");s.startDate={year:i(p=e),month:o(p),day:c(p)},s.startTimeJS=new Date(s.startDate.year,s.startDate.month,s.startDate.day,s.startTime.hours,s.startTime.minutes,s.startTime.seconds)}var p,h;return s})),r}))}(t,e.collection),e}(this.xmlDoc):null}}function s(t){const e=n(t,["NML","COLLECTION","ENTRY"])??[];return Array.prototype.map.call(e,((t,e)=>{const n=t.getElementsByTagName("LOCATION")[0],r=`${n.attributes.getNamedItem("VOLUME")?.value}${n.attributes.getNamedItem("DIR")?.value}${n.attributes.getNamedItem("FILE")?.value}`;return{title:t.attributes.getNamedItem("TITLE")?.value,artist:t.attributes.getNamedItem("ARTIST")?.value,key:r}})).reduce(((t,e)=>(t[e.key]=e,t)),{})}class a extends t{filter(t,e){const n=super.filter(t,e);return function(t){const e=t.tracks[0],n=t.tracks[t.tracks.length-1];if(e&&n&&e?.startTimeJS&&n?.startTimeJS){const n=e.startTimeJS.getTime();t.tracks.forEach((t=>{t.startTimeJS&&(t.timeOffset=(t.startTimeJS.getTime()-n)/1e3,t.timeOffsetString=function(t){const e=m(t).toString().padStart(2,"0"),n=u(t).toString().padStart(2,"0"),r=l(t).toString().padStart(2,"0");return 0===m(t)?`${n}:${r}`:`${e}:${n}:${r}`}(t.timeOffset))}))}}(n),n}}function i(t){return t>>16}function o(t){return(t>>8)%256}function c(t){return t%256}function l(t){return t%60}function u(t){return Math.floor((t-3600*Math.floor(t/3600))/60)}function m(t){return Math.floor(t/3600)}class p{static format="RekordBox";static extensions=[".xml"];constructor(t){if(this.xmlDoc=p.parseXML(t),this.xmlDoc){0===this.xmlDoc.getElementsByTagName("DJ_PLAYLISTS").length&&(this.xmlDoc=null)}}static parseXML(t){const e=(new DOMParser).parseFromString(t,"text/xml");return 0!==e.getElementsByTagName("parsererror").length?null:e}supports(){return null!==this.xmlDoc}parse(){return this.xmlDoc?function(e){if(!e.getElementsByTagName("DJ_PLAYLISTS").length)return null;const n={collection:h(e),playlists:[],format:"RekordBox"};return n.playlists=function(e,n){const r=e.querySelectorAll("NODE[Type='1']");return Array.prototype.map.call(r,(e=>{const r=e.attributes.getNamedItem("Name")?.value||"",s=new t(r,[]);return s.tracks=Array.prototype.map.call(e.getElementsByTagName("TRACK"),((t,e)=>{const r=t.attributes.getNamedItem("Key")?.value??"";return{key:r,playedPublic:!0,collectionEntry:n[r]}})),s}))}(e,n.collection),n}(this.xmlDoc):null}}function h(t){const e=n(t,["DJ_PLAYLISTS","COLLECTION","TRACK"]);return Array.prototype.map.call(e,((t,e)=>({key:t.attributes.getNamedItem("TrackID")?.value,title:t.attributes.getNamedItem("Name")?.value,artist:t.attributes.getNamedItem("Artist")?.value}))).reduce(((t,e)=>(t[e.key]=e,t)),{})}class d{constructor(t){this.data=t}get name(){const t=/(\w+)(\s|$)/g.exec(this.data);return t?.[1]?t[1].toUpperCase():""}stringParam(){let t=/^\s*(\w+)\s"(.*)"/.exec(this.data);return t?.[2]?t[2]:(t=/^\s*\w+\s(.*)$/.exec(this.data),t?.[1]?t[1]:void 0)}param(t){return this.data.split(" ")[t]}}class T{onCommand(t,e){switch(e.name){case"TITLE":this.title=e.stringParam();break;case"PERFORMER":this.performer=e.stringParam()}}onNextState(t,e){return"FILE"===e.name?new y:this}}class y{onCommand(e,n){const r=[e.header.title,e.header.performer].filter((t=>t)),s=new t(r.join(" - "));e.archive.playlists.push(s)}onNextState(t,e){return"TRACK"===e.name?new f(t,e.param(1)):this}}class f{constructor(t,e){this.id=e??""+Math.random();const n={key:this.id,title:"",artist:""},r=t.archive.playlists[t.archive.playlists.length-1],s={key:n.key,collectionEntry:n,playedPublic:!0};r?.tracks.push(s),t.archive.collection[n.key]=n}playlist(t){return t.archive.playlists[t.archive.playlists.length-1]}playlistTrack(t){const e=this.playlist(t);return e.tracks[e.tracks.length-1]}collectionTrack(t){const e=this.playlistTrack(t);return t.archive.collection[e.key]}onCommand(t,e){const n=this.collectionTrack(t);switch(e.name){case"TITLE":n.title=e.stringParam()??"";break;case"PERFORMER":n.artist=e.stringParam()??""}}onNextState(t,e){return"TRACK"===e.name?new f(t,e.param(1)):this}}const E="TRACK TITLE",g="ARTIST",k="#";function x(t,e,n){const r=e[t];return void 0!==r&&n[r]?n[r]:null}const I={INDEX:(t,e,n)=>n.replace("${INDEX}",`${e+1}`),INDEX_PADDED:(t,e,n)=>{const r=t.tracks.length.toString().length;return n.replace("${INDEX_PADDED}",(e+1).toString().padStart(r,"0"))},TITLE:(t,e,n)=>n.replace("${TITLE}",t.tracks?.[e]?.collectionEntry.title||"Unknown Title"),ARTIST:(t,e,n)=>n.replace("${ARTIST}",t.tracks?.[e]?.collectionEntry.artist||"Unknown Artist"),OFFSET:(t,e,n)=>{const r=t.tracks[e]?.timeOffsetString??"";return n.replace("${OFFSET}",r)}};function D(t,e){const n=[];return n.push(t.name),t.tracks.map(((r,s)=>{return n.push((a=t,i=s,o=e,Object.values(I).forEach((t=>{o=t(a,i,o)})),o));var a,i,o})),n.join("\n")}function L(t){return document.getElementById(t)}const N=[r,p,class{static format="RekordBox M3U8";static extensions=[".m3u8"];constructor(t){this.contents=t}supports(){return this.contents.startsWith("#EXTM3U")}parse(){return function(n){if(!n.startsWith("#EXTM3U"))return null;const r={collection:{},playlists:[],format:"M3U"},s=new t("Untitled Playlist");let a,i;return r.playlists.push(s),e(n,(t=>{const e=/^#EXTINF:(\d+),(([^-]*$)|(.*)( - )(.*))/g.exec(t);if(e&&e[1])a={key:"__TEMP__",title:e[6]||e[3]||"",artist:e[4]||""},i={key:a.key,playedPublic:!0,collectionEntry:a};else if(i&&a){const e=t;a.key=e,i.key=e,r.collection[e]=a,s.tracks.push(i)}})),r}(this.contents)}},class{static format="RekordBox CUE";static extensions=[".cue"];constructor(t){this.contents=t}supports(){return this.contents.startsWith("REM DATE ")}parse(){return function(t){let n=new T;const r={archive:{collection:{},playlists:[],format:"CUE"},header:n};return function(t,n){e(t,((t,e)=>{const r=new d(t);n(r)}))}(t,(t=>{n.onCommand(r,t),n=n=n.onNextState(r,t)})),r.archive}(this.contents)}},class{static format="RekordBox TXT";static extensions=[".txt"];constructor(t){this.contents=t}supports(){return this.contents.trim().startsWith("#\t")}parse(){const n={collection:{},playlists:[],format:"CUE"},r=new t;return function(t,n){let r={};e(t,((t,e)=>{const s=t.split("\t");0===e?r=s.reduce(((t,e,n)=>(t[e.toUpperCase()]=n,t)),r):n({key:x(k,r,s)??`${Math.random()}`,title:x(E,r,s)??"",artist:x(g,r,s)??""})}))}(this.contents,(t=>{const e={key:t.key,collectionEntry:t,playedPublic:!0};n.collection[t.key]=t,r.tracks.length||n.playlists.push(r),r.tracks.push(e)})),n}}];function S(t){L("errorResults").setAttribute("class","hidden"),L("playlistResults").setAttribute("class","hidden");const e=function(t){for(let e of N){const n=new e(t);if(n.supports())return n.parse()}return null}(t);if(!e){!function(t){L("errorResults").setAttribute("class","");L("errorMessage").innerText=t}("Sorry, we could not parse that file.");return void(L("trackList").innerText="No playlists found.")}const n=L("playlistsDropDown");n.replaceChildren(""),e.playlists.forEach(((t,e)=>{const r=document.createElement("option");t.name.trim().length?r.innerText=t.name:r.innerText=`Playlist ${e+1}`,r.playlist=t,n.appendChild(r)})),L("playlistResults").setAttribute("class",""),v()}function v(){const t=L("playlistsDropDown").selectedOptions[0];let e=parseInt(L("startTrackIndex").value)||1;e=Math.max(0,e-1);const n=L("publicTracks"),r=t.playlist.filter(e,n.checked);L("trackList").textContent=D(r,function(){let t=L("formatString").value;return 0===t.length&&(t="${INDEX}. ${TITLE} - ${ARTIST}"),t}())}function A(t){XMLHttpRequestEventTarget;const e=t.target,n=e?.files?.[0];if(!n)return;const r=new FileReader;r.readAsText(n),r.onload=function(){S(r?.result?.toString()??"")},e.value=""}function R(){const t=L("trackList").innerText;navigator.clipboard.writeText(t)}function b(){const t=L("trackList").innerText,e=new Blob([t],{type:"text/plain;charset=utf-8"});let n="";const r=L("playlistsDropDown").selectedOptions[0];n=r?r.innerText+".txt":"playlist.txt",function(t,e){const n=document.createElement("a");n.download=e,n.href=URL.createObjectURL(t),n.click()}(e,n)}window.addEventListener("DOMContentLoaded",(()=>{L("archiveFile").addEventListener("change",A,!1),L("formatString").addEventListener("input",v,!1),L("startTrackIndex").addEventListener("input",v,!1),L("publicTracks").addEventListener("input",v,!1),L("copyToClipboard").addEventListener("click",R,!1),L("saveToTxtFile").addEventListener("click",b,!1),L("playlistsDropDown").addEventListener("change",v,!1);const t=Object.keys(I).map((t=>`\${${t}}`)).join(" "),e=L("fieldList");e.textContent=e.textContent+t;const n=N.map((t=>t.extensions)).flat();L("archiveFile").accept=n.join(",")}));
//# sourceMappingURL=index.9c6baab3.js.map
